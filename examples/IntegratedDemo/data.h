#ifndef _DATA_H
#define _DATA_H

#define SPRITE_GUY 0
#define SPRITE_BADGUY 8*8
#define SPRITE_WALL 8*9
#define SPRITE_WALL_B 8*10
#define SPRITE_SPAWNER 8*11
#define SPRITE_EXIT 8*12
#define SPRITE_KEY 8*13
#define SPRITE_TREASURE 8*14

const char gameTitle[] PROGMEM    = "GLOVE\0         "; // max 10 (field 16)
const char gameSubTitle[] PROGMEM = "\0              "; // max 20 (field 21)
const char gameRandom[] PROGMEM   = "random mode";

const char titleNormal[] PROGMEM = "Glove";
const char titleRandom[] PROGMEM = "Random";

const uint8_t sprites[] PROGMEM = {
    
    0x00, 0x00, 0x6c, 0x3f, 0x3f, 0xc8, 0x00, 0x00, // guy walk up A
    0x00, 0x00, 0xc8, 0x3f, 0x3f, 0x6c, 0x00, 0x00, // guy walk up B
    
    0x00, 0x08, 0x64, 0x3f, 0x3f, 0xcc, 0x00, 0x00, // guy walk down A
    0x00, 0x00, 0xcc, 0x3f, 0x3f, 0x64, 0x08, 0x00, // guy walk down B
    
    0x00, 0x84, 0xc8, 0x3f, 0x3f, 0x44, 0xcc, 0x00, // guy walk left A
    0x00, 0x00, 0x1c, 0xff, 0xff, 0x0c, 0x00, 0x00, // guy walk left B
    
    0x00, 0xcc, 0x44, 0x3f, 0x3f, 0xc8, 0x84, 0x00, // guy walk right A
    0x00, 0x00, 0x0c, 0xff, 0xff, 0x1c, 0x00, 0x00, // guy walk right B
    
    0x1c, 0x36, 0x44, 0xa4, 0xa4, 0x44, 0x36, 0x1c, // bad guy sprite
    
    0x81, 0xc2, 0xe4, 0xf8, 0xf8, 0xec, 0xd6, 0xab, // wall sprite A
    0x00, 0xfe, 0xa2, 0x62, 0xa2, 0x62, 0xfe, 0x00, // wall sprite B
    
    0x00, 0x54, 0x00, 0x2a, 0x00, 0x54, 0x00, 0x2a, // spawner sprite
    0x57, 0x77, 0x55, 0x00, 0x15, 0x72, 0x15, 0x00, // exit sprite
    0x00, 0x00, 0x00, 0xae, 0xfa, 0x0e, 0x00, 0x00, // key sprite
    
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // empty sprite
    0x62, 0x70, 0x79, 0x5c, 0x2e, 0x96, 0x0a, 0x44, // gold sprite
    0x20, 0x48, 0x50, 0x54, 0x56, 0x50, 0x48, 0x20, // poo sprite
    0x0c, 0x18, 0x58, 0x78, 0x58, 0x18, 0x0c, 0x00, // cup sprite
    0x10, 0x38, 0x7c, 0x74, 0x7c, 0x74, 0x38, 0x10, // lemon sprite
};

const uint16_t levelData[] PROGMEM = {
	0x8015, 0x8515, 0x62a0, 0x6520, 0xc9a1, 0x39a1, 0x039c, 0x0418, 
	0xd394, 0xd414, 0x830f, 0x0384, 0x0384, 0x0384, 0x0384, 0x0384, 
	0x6900, 0x9900, 0x6e80, 0x9e80, 0x0f50, 0x0f50, 0x0f50, 0x0f50, 
	0x1980, 0xf280, 0xf280, 0xf280, 0xf280, 0xed16, 0x0d90, 0x0000,
    
	0x1a18, 0x6821, 0x1c24, 0x06ac, 0x6604, 0x7584, 0x8504, 0x9484, 
	0xa404, 0xb384, 0x91a4, 0xa689, 0xa61c, 0xda1d, 0x0684, 0x1705, 
	0x9a80, 0x5a80, 0xf200, 0x3d80, 0xb758, 0xc778, 0xc778, 0xc778, 
	0x1900, 0x0783, 0xf082, 0xf082, 0xf082, 0x2710, 0xd740, 0xa91d,
    
	0x7a9c, 0x8b09, 0x3d07, 0xbaa1, 0x6da4, 0x6129, 0x7928, 0xe011, 
	0xd394, 0xe509, 0xc690, 0x1324, 0x04a4, 0x1e18, 0xa187, 0x2815, 
	0x4180, 0xc200, 0x5700, 0xf680, 0xb9f0, 0xb9f0, 0x2510, 0x2510, 
	0xa380, 0x1804, 0x1804, 0x1804, 0x1804, 0x3596, 0xf090, 0x3a40,
    
	0x3a1d, 0xc21d, 0x39c4, 0x3e44, 0x4581, 0x4201, 0xba01, 0xbd81, 
	0x0701, 0x0081, 0x0801, 0xf781, 0x0f81, 0xff01, 0xf881, 0xf001, 
	0xff80, 0xff80, 0xff80, 0xff80, 0xff80, 0xff80, 0xff80, 0xff80, 
	0x7b80, 0xbc04, 0xbb84, 0x4384, 0x4404, 0x8a16, 0x5434, 0xa530,
    
	0xa9a8, 0x8bac, 0xada8, 0x82a1, 0x641d, 0x1a34, 0x041c, 0x4415, 
	0x800d, 0x6005, 0x4005, 0x2005, 0x2107, 0x4107, 0x6107, 0x3f05, 
	0x9280, 0x5b00, 0x5f80, 0x9e00, 0x1860, 0x3868, 0x5870, 0x7878, 
	0xf080, 0x1706, 0x7985, 0x7985, 0x7985, 0x0a90, 0xab40, 0xde95,
    
	0x5399, 0x0f24, 0xa499, 0x5bd0, 0xaca8, 0x5384, 0x5384, 0x5384, 
	0x53a4, 0x53a4, 0x0424, 0x0d24, 0x5384, 0x0620, 0x5384, 0x5384, 
	0x5780, 0x5c00, 0x7d80, 0x9700, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x4c80, 0xfc08, 0xfc08, 0xfc08, 0xfc08, 0x0800, 0x1000, 0x1800,
    
	0xa60e, 0x418e, 0x3991, 0x3c10, 0x6195, 0xa18e, 0x9995, 0xa40c, 
	0xc195, 0x460e, 0x3e0d, 0x1389, 0x660d, 0x9e0d, 0xc60d, 0xeb89, 
	0xb700, 0x0c00, 0xf400, 0x4a80, 0xffa8, 0x5b80, 0xbb88, 0xbfc8, 
	0x0880, 0x5f87, 0x5f87, 0x5f87, 0x5f87, 0x43c0, 0xa7c0, 0xa333,
    
	0x1811, 0x1a94, 0x4a95, 0x4d94, 0x3914, 0x6919, 0x8410, 0x9499, 
	0x0414, 0x2c91, 0x72ac, 0xd12d, 0xb59c, 0x9811, 0x7406, 0x2f07, 
	0xaf00, 0x3e00, 0x8080, 0xe980, 0x81f0, 0x81f0, 0x81f0, 0x81f0, 
	0x0880, 0xa988, 0xa988, 0xa988, 0xa988, 0x1610, 0x9bb9, 0xc000,
    
	0x6a9d, 0x899d, 0x4920, 0x6ea0, 0x4011, 0xb591, 0x05b0, 0x9234, 
	0x021c, 0xbda0, 0xfa85, 0xfc85, 0x0285, 0x0485, 0xf801, 0xf801, 
	0x3300, 0x3480, 0x1b80, 0x4380, 0xf800, 0xf800, 0xf800, 0xf800, 
	0x7b80, 0xfb8a, 0xfc0a, 0x0389, 0x0409, 0xdb30, 0xbbb0, 0xdcb0,
    
	0x4201, 0xba01, 0xc1a5, 0x39a5, 0x41bc, 0x463c, 0x4581, 0xbd81, 
	0xba85, 0xbc85, 0x4285, 0x4485, 0x3944, 0x3ec4, 0xff01, 0xf781, 
	0xff80, 0xff80, 0xff80, 0xff80, 0xf800, 0xf800, 0xf800, 0xf800, 
	0xbc00, 0x438e, 0x440e, 0x0780, 0x0780, 0x8bcd, 0x6436, 0x5b10,
    
	0x41bc, 0x4209, 0xb98d, 0x448d, 0xbc8d, 0x4e34, 0x3944, 0x3ec4, 
	0x39a5, 0xc1a5, 0xf781, 0xff01, 0x3904, 0x3904, 0x3904, 0x3904, 
	0xff80, 0xff80, 0xff80, 0xff80, 0xf800, 0xf800, 0xf800, 0xf800, 
	0x4380, 0xbb8b, 0xbc0b, 0x0780, 0x0780, 0xa249, 0x6c36, 0x85c0,
    
	0x5a81, 0x1701, 0xe501, 0xc801, 0x6081, 0xa301, 0xd301, 0x9681, 
	0x9901, 0x1101, 0x3501, 0x6c81, 0x8c81, 0xb281, 0x5e81, 0x3301, 
	0x3980, 0xb980, 0x4480, 0xac80, 0xd528, 0xa358, 0x6c80, 0x5af8, 
	0x2900, 0x330c, 0x330c, 0x330c, 0x330c, 0xf800, 0xf880, 0xf900,
    
	0x0809, 0x1188, 0x2a89, 0x3408, 0x5489, 0x5e08, 0x5218, 0x8a99, 
	0x9e18, 0xd9ad, 0xab14, 0x3750, 0x78a4, 0x4815, 0x2d11, 0x0610, 
	0x0c80, 0x6b80, 0xb500, 0x9100, 0x0800, 0x0800, 0x0800, 0x0800, 
	0x0680, 0x058d, 0x058d, 0x058d, 0x058d, 0xf800, 0xf000, 0xe800,
    
	0x4210, 0x5225, 0x7011, 0x1911, 0xb5a4, 0x9515, 0x1c14, 0x0614, 
	0x8218, 0xb38d, 0x0a10, 0x9811, 0xf81d, 0xd119, 0xd290, 0x5d9c, 
	0xc300, 0x3500, 0x4080, 0xae80, 0xf800, 0xf800, 0xf800, 0xf800, 
	0xe200, 0x8710, 0x8710, 0x8710, 0x8710, 0x8197, 0x4533, 0xe340,
    
	0x4108, 0x390d, 0xa10c, 0xb989, 0x3d0d, 0x4688, 0xbd09, 0xa68c, 
	0x6b90, 0x7a91, 0x2801, 0x2f81, 0xc801, 0xcf81, 0x2801, 0x2801, 
	0xdd80, 0xda80, 0x2600, 0x1a00, 0x0e48, 0xe9c0, 0xe9c0, 0xe9c0, 
	0x7900, 0x7b8f, 0x7b8f, 0x7b8f, 0x7b8f, 0xcc20, 0x1590, 0x9790,
    
	0x1809, 0x2189, 0x2b09, 0x3489, 0xa9a8, 0x4909, 0x3e08, 0x5588, 
	0x6d08, 0x8488, 0x9c08, 0xd589, 0x8210, 0xb388, 0x5294, 0xcc09, 
	0x2f80, 0x4c80, 0x6980, 0xee00, 0x1800, 0x1800, 0x1800, 0x1800, 
	0xf080, 0x0a96, 0x0a96, 0x0a96, 0x0a96, 0x0b97, 0x1e80, 0xb320,
    
	0x5a91, 0x863c, 0x7c94, 0x8290, 0xab89, 0xa109, 0xa928, 0xb38c, 
	0xd20d, 0x3a8c, 0x3811, 0x5807, 0x590c, 0x7809, 0x3b25, 0x7d09, 
	0x5e00, 0x4080, 0xe500, 0xc000, 0xe058, 0xe058, 0xe058, 0xe058, 
	0x6200, 0x8d92, 0x4b93, 0x6811, 0x4b93, 0x9894, 0xc596, 0xf800,
    
	0x4985, 0x5285, 0x5b85, 0x6485, 0x4920, 0x9185, 0x9a85, 0xa385, 
	0xac85, 0xb585, 0x6d85, 0x76a0, 0xff01, 0xf781, 0x4908, 0x4908, 
	0xff80, 0xff80, 0xff80, 0xff80, 0xff80, 0xff80, 0xff80, 0xff80, 
	0x7200, 0x9615, 0x9615, 0x9615, 0x9615, 0x6b15, 0x8c39, 0x7dc0,
    
	0xd194, 0xb015, 0xb410, 0xd20d, 0x8e28, 0x89a1, 0xe606, 0xf604, 
	0x718d, 0x24b0, 0x760d, 0x1c91, 0x4a14, 0x3614, 0x0314, 0x4021, 
	0x4700, 0x9080, 0xef80, 0x3200, 0x4ab0, 0x4ab0, 0x4ab0, 0x4ab0, 
	0xf080, 0x1914, 0x1900, 0x1900, 0x1900, 0x5095, 0xeb90, 0x1290, 
    
	0xc015, 0xbba0, 0xe111, 0x9214, 0x9295, 0xbd15, 0xce14, 0x76a0, 
	0x6b99, 0x3c94, 0x32a1, 0x130c, 0x5011, 0x590c, 0x0588, 0x4e0d, 
	0xdf00, 0xa080, 0x1980, 0x5f00, 0x0580, 0x0580, 0x0580, 0x0580, 
	0xf280, 0xa792, 0xa792, 0xa792, 0xa792, 0xd316, 0x641c, 0x1c44,
    
	0x3a15, 0x399c, 0x3d1c, 0x4ab0, 0x4b09, 0x5428, 0xc41c, 0xaa8d, 
	0x8994, 0xb99d, 0x8d14, 0x558d, 0xad91, 0x710c, 0xdb05, 0xe305, 
	0x0980, 0xd800, 0x1400, 0x2a80, 0xff80, 0xff80, 0xff80, 0xff80, 
	0x7980, 0xf39b, 0xcb9a, 0xf39b, 0xcb9a, 0xf800, 0xf880, 0xf900,
    
	0x1891, 0x2288, 0x5191, 0x5a88, 0x8a91, 0x9288, 0xd315, 0xca88, 
	0x1511, 0x1c90, 0xa40c, 0x4410, 0x3e48, 0x9811, 0x0288, 0xb124, 
	0x7080, 0x3380, 0xd880, 0x8f00, 0xf900, 0xf900, 0xf900, 0xf900, 
	0x0980, 0xf71b, 0xf71b, 0xf71b, 0xf71b, 0x4b15, 0xb590, 0x6710,
    
	0x1095, 0x290d, 0x4185, 0x590d, 0x7095, 0x7b10, 0x7c8c, 0x8604, 
	0x9889, 0x788c, 0x9a07, 0x2508, 0x3585, 0x5601, 0xc9a1, 0xb3a4, 
	0xe480, 0x6580, 0x1b80, 0x1700, 0x2dd0, 0x2dd0, 0x2dd0, 0x2dd0, 
	0xe900, 0x8197, 0x8197, 0x8197, 0x8197, 0x1990, 0x0f40, 0xee90,
    
	0x9d89, 0x019c, 0x420c, 0x6284, 0x9284, 0xa20c, 0xc19c, 0x6d94, 
	0x728e, 0x1c15, 0x240c, 0x2690, 0x4409, 0xce89, 0xcd18, 0x6d91, 
	0x1b00, 0x7700, 0xde80, 0x9880, 0x3540, 0x3540, 0x3540, 0x3540, 
	0xf280, 0xf098, 0x0899, 0x0899, 0xf098, 0x8690, 0x1890, 0xe090,
    
	0x0108, 0x3295, 0x1195, 0x0b18, 0x5095, 0x4918, 0x731d, 0x4da8, 
	0x2591, 0xb01d, 0xa2a4, 0xd92d, 0xc514, 0x171c, 0xb689, 0x9411, 
	0x4600, 0x4180, 0x8a00, 0xce80, 0xb000, 0xb000, 0xb000, 0xb000, 
	0x0a00, 0xa091, 0xc919, 0xa091, 0xc919, 0xc247, 0x2a9c, 0x6d1c,
    
	0x0318, 0x3911, 0x5819, 0x7c99, 0x9819, 0x0498, 0x3b87, 0x3c99, 
	0x5b87, 0x7b87, 0x5c8d, 0x798d, 0x9b87, 0x9c8d, 0xa28c, 0xbaa9, 
	0x4b00, 0x6b00, 0x8b00, 0xab00, 0x5bb0, 0x7bc0, 0x9bc8, 0xad60, 
	0x1980, 0x039a, 0x039a, 0x041a, 0x041a, 0xf800, 0xf880, 0xf900,
    
	0x7190, 0x6a01, 0x9a01, 0x6295, 0xa295, 0x6d81, 0x9d81, 0x7610, 
	0xff01, 0xf781, 0x7184, 0x7184, 0x7184, 0x7184, 0x7184, 0x7184, 
	0xff80, 0xff80, 0xff80, 0xff80, 0xff80, 0xff80, 0xff80, 0xff80, 
	0x8200, 0x859d, 0x859d, 0x859d, 0x859d, 0x6a1d, 0x92bf, 0x6cc6,
    
	0xc606, 0x188d, 0x3a18, 0x3d8d, 0x2c09, 0xeb08, 0xed08, 0x1a90, 
	0x0d94, 0x048d, 0xeb8b, 0xd614, 0x6494, 0x7211, 0x71a0, 0xb9a9, 
	0x4c00, 0xda00, 0x5880, 0x9e80, 0xc580, 0xc580, 0xc580, 0xf750, 
	0x0380, 0xfc1c, 0xfc1c, 0xfc1c, 0xfc1c, 0x7a20, 0x8416, 0xd740,
    
	0x1815, 0x3899, 0x5a18, 0x7289, 0x3c1c, 0xad18, 0x8e0d, 0xdd89, 
	0xa91d, 0xb188, 0xc915, 0x648d, 0xca98, 0x261c, 0x1b07, 0x1c1d, 
	0x4980, 0x9480, 0x6f00, 0xf480, 0xbaf0, 0xbaf0, 0xbaf0, 0xbaf0, 
	0x5500, 0x131d, 0x139d, 0x139d, 0x131d, 0xda16, 0x5b10, 0x5740, 
    
	0x0610, 0x4591, 0x7935, 0x7807, 0x1430, 0x0406, 0x9415, 0xf386, 
	0x210d, 0x9707, 0x83b4, 0x2914, 0x590d, 0xb18d, 0xb998, 0xb5a4, 
	0x6680, 0x3a00, 0xca00, 0xf700, 0x66a8, 0x3a18, 0xca38, 0xf748, 
	0x0f00, 0x849e, 0x8c9e, 0x841e, 0x8c1e, 0x4b96, 0xb116, 0xf800, 
};

const char levelNames[] PROGMEM = 
    "Bunker 1       \0"
    "Bunker 2       \0"
    "Bunker 3       \0"
    "Bunker 3-B     \0"
    "Bunker 4       \0"
    "Bunker 5       \0"
    "Bunker 5-B     \0"
    "Bunker 5-C     \0"
    "Bunker 6       \0"
    "Bunker 7-A     \0"
    "Bunker 7-B     \0"
    "Forest 1       \0"
    "Forest 2       \0"
    "Forest 3       \0"
    "Courtyard 1    \0"
    "Courtyard 2    \0"
    "Forest 4       \0"
    "Treasury 1     \0"
    "Hedge Maze 1-B \0"
    "Hedge Maze 1   \0"
    "Hedge Maze 2   \0"
    "Plant 1        \0"
    "Courtyard 3    \0"
    "Courtyard 4    \0"
    "Courtyard 5    \0"
    "Courtyard 5-B  \0"
    "Treasury 2     \0"
    "Tower 1        \0"
    "Tower 2        \0"
    "Base 1         ";

const uint8_t numLevels = 30;

#endif
